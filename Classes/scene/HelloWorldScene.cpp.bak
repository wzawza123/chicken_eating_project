/****************************************************************************
 Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.
 
 http://www.cocos2d-x.org
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:
 
 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.
 
 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE.
 ****************************************************************************/

#include "HelloWorldScene.h"
#include"SingleModeRuntimeScene.h"
#include"OnlineModeRuntimeScene.h"

USING_NS_CC;

Scene* HelloWorld::createScene()
{
    return HelloWorld::create();
}

// Print useful error message instead of segfaulting when files are not there.
static void problemLoading(const char* filename)
{
    printf("Error while loading: %s\n", filename);
    printf("Depending on how you compiled you might have to add 'Resources/' in front of filenames in HelloWorldScene.cpp\n");
}

// on "init" you need to initialize your instance
bool HelloWorld::init()
{
    //////////////////////////////
    // 1. super init first
    if ( !Scene::init() )
    {
        return false;
    }

    auto visibleSize = Director::getInstance()->getVisibleSize();//实际窗口尺寸
    Vec2 origin = Director::getInstance()->getVisibleOrigin();//偏移值

    /////////////////////////////
    // 2. add a menu item with "X" image, which is clicked to quit the program
    //    you may modify it.

    // add a "close" icon to exit the progress. it's an autorelease object
    auto closeItem = MenuItemImage::create(
                                           "CloseNormal.png",
                                           "CloseSelected.png",
                                           CC_CALLBACK_1(HelloWorld::menuCloseCallback, this));

    if (closeItem == nullptr ||
        closeItem->getContentSize().width <= 0 ||
        closeItem->getContentSize().height <= 0)
    {
        problemLoading("'CloseNormal.png' and 'CloseSelected.png'");
    }
    else
    {
        float x = origin.x + visibleSize.width - closeItem->getContentSize().width/2;
        float y = origin.y + /*visibleSize.height -*/ closeItem->getContentSize().height/2;
        closeItem->setPosition(Vec2(x,y));
    }

    
    // create menu, it's an autorelease object
    auto closeButtonMenu = Menu::create(closeItem, NULL);
    closeButtonMenu->setPosition(Vec2::ZERO);
    this->addChild(closeButtonMenu, 1);

    /////////////////////////////
    // 3. add your codes below...

    // add a label shows "Hello World"
    // create and initialize a label

    auto labelGameName = Label::createWithTTF("P O B G", "Marker Felt.ttf", 45);
    if (labelGameName == nullptr)
    {
        problemLoading("'Marker Felt.ttf'");
    }
    else
    {
        // position the label on the center of the screen
        labelGameName->setPosition(Vec2(origin.x + visibleSize.width/2,
                                origin.y + visibleSize.height - labelGameName->getContentSize().height));

        // add the label as a child to this layer
        this->addChild(labelGameName, 1);
    }
    
    
    
//单人模式选择按钮
    //创建一段文字
auto labelSingle = Label::createWithTTF("Single Mode","Marker Felt.ttf", 40);
    //创建一个标签菜单对象，其实就是文字按钮拉
auto singleModeItem = MenuItemLabel::create(labelSingle,CC_CALLBACK_1(HelloWorld::singleModeSelectedCallback, this));
    //创建一个菜单，用来放上面创建出来的菜单对象 注意最后一定要加个NULL 告诉他可以开始创建了！
auto singleModeMenu = Menu::create(singleModeItem, NULL);
//菜单类还提供了alignItemsVertically 和align-ItemsHorizontally 等函数一种是alignItemsHorizontally 水平对齐，另外alignItemsHorizontallyWithPadding 是留空间水平对齐。
    //垂直排列
    //....>alignItemsVertically();

    //水平排列不间隔
    //....->alignItemsHorizontally();
    
    //水平排列留间隔，这里的参数是填写间隔多少
    //....->alignItemsHorizontallyWithPadding(100.0);    selectMenu->alignItemsVertically();
singleModeMenu->setPosition(Vec2(origin.x + visibleSize.width/2,
                             origin.y + 3*visibleSize.height/4 - labelGameName->getContentSize().height));
this->addChild(singleModeMenu,1);

//多人模式选择按钮
    auto labelOnline = Label::createWithTTF("Online Mode","Marker Felt.ttf", 40);
        
    auto onlineModeItem = MenuItemLabel::create(labelOnline,CC_CALLBACK_1(HelloWorld::onlineModeSelectedCallback, this));
        
    auto onlineModeMenu = Menu::create(onlineModeItem, NULL);
    onlineModeMenu->setPosition(Vec2(origin.x + visibleSize.width/2,
                                 origin.y + visibleSize.height/2 - labelGameName->getContentSize().height));
    this->addChild(onlineModeMenu,1);

    
    //开始界面背景图片渲染
    // add "HelloWorld" splash screen"
    //auto sprite = Sprite::create("HelloWorld.png");
    auto startSenceBackground = Sprite::create("startsence.png");
    if (startSenceBackground == nullptr)
    {
        problemLoading("'startsence.png'");
    }
    else
    {
        startSenceBackground->setScale(0.7);
        // position the sprin the center of the screen
        startSenceBackground->setPosition(Vec2(visibleSize.width/2 + origin.x, visibleSize.height/2 + origin.y));

        // add the sprite as a child to this layer
        this->addChild(startSenceBackground, 0);
    }
    return true;
}


void HelloWorld::menuCloseCallback(Ref* pSender)
{
    //Close the cocos2d-x game scene and quit the application
    Director::getInstance()->end();

    /*To navigate back to native iOS screen(if present) without quitting the application  ,do not use Director::getInstance()->end() as given above,instead trigger a custom event created in RootViewController.mm as below*/

    //EventCustom customEndEvent("game_scene_close_event");
    //_eventDispatcher->dispatchEvent(&customEndEvent);


}


void HelloWorld::singleModeSelectedCallback(Ref* pSender)
{
    Director::getInstance()->replaceScene(SingleModeRuntime::createScene());
}

void HelloWorld::onlineModeSelectedCallback(Ref* pSender)
{
    Director::getInstance()->replaceScene(OnlineModeRuntime::createScene());
}
